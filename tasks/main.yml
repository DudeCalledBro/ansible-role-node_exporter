- name: Create Node Exporter Directory
  ansible.builtin.file:
    path: "{{ node_exporter_path }}"
    owner: "{{ node_exporter_file_owner }}"
    group: "{{ node_exporter_file_group }}"
    state: directory
    mode: 0755

- name: Create Node Exporter Web Configuration
  when:
  - node_exporter_webconfig is defined
  - node_exporter_webconfig | length
  ansible.builtin.copy:
    content: "{{ node_exporter_webconfig }}"
    dest: "{{ node_exporter_path }}/web.yml"
    owner: "{{ node_exporter_file_owner }}"
    group: "{{ node_exporter_file_group }}"
    mode: 0644
  notify: restart node exporter

- name: Create Node Exporter Docker Compose File
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ node_exporter_path }}/docker-compose.yml"
    owner: "{{ node_exporter_file_owner }}"
    group: "{{ node_exporter_file_group }}"
    mode: 0644
    trim_blocks: false
  notify: restart node exporter

- name: Validate Node Exporter Docker Compose File
  ansible.builtin.command: docker compose config --quiet
  args:
    chdir: "{{ node_exporter_path }}"
  changed_when: false

- name: Startup Node Exporter Docker Container
  ansible.builtin.command: >-
    docker compose --ansi never --progress plain up --detach
  args:
    chdir: "{{ node_exporter_path }}"
  register: node_exporter_container_startup
  changed_when: "'Started' in node_exporter_container_startup.stdout"

- name: Verify Node Exporter is responding
  ansible.builtin.uri:
    url: "{{ node_exporter_verify_url }}"
    url_username: "{{ node_exporter_verfiy_username | default(omit) }}"
    url_password: "{{ node_exporter_verify_password | default(omit) }}"
    validate_certs: "{{ node_exporter_verify_certs | default(omit) }}"
    return_content: true
  register: node_exporter_metrics_response
  failed_when: "'Metrics' not in node_exporter_metrics_response.content"
